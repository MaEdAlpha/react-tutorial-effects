{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\repo\\\\React\\\\react-tutorial-effects\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button'; //define your dispatFn outside of scope as it takes in no props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: null\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT_PW') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const [formIsValid, setFormIsValid] = useState(emailState.isValid && passwordState.isValid);\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      console.log('Checking form validity');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return clearTimeout(debounce);\n  }, [emailState, passwordState]); //This tells React to run only if any of the dependencies have changed.\n\n  const emailChangeHandler = event => {\n    dispatchEmailState({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPasswordState({\n      type: 'USER_INPUT_PW',\n      val: event.target.value\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"bv7RmBsv4+klS7GmcTfCAhjXUp0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Ryan/Documents/repo/React/react-tutorial-effects/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","emailState","dispatchEmailState","passwordState","dispatchPasswordState","formIsValid","setFormIsValid","debounce","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//define your dispatFn outside of scope as it takes in no props\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value:'', isValid: null };\n}\n\nconst passwordReducer = (state, action) => {\n if( action.type === 'USER_INPUT_PW'){\n   return { value: action.val, isValid: (action.val).trim().length > 6 };\n }\n if(action.type === 'INPUT_BLUR'){\n   return { value: state.value, isValid: state.value.trim().length > 6};\n }\n return { value:'', isValid:false };\n}\n\nconst Login = (props) => {\n  \n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {value:'', isValid:false} );\n  \n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {value:'', isValid:false});\n  \n  const [formIsValid, setFormIsValid] = useState(emailState.isValid && passwordState.isValid);\n\n  useEffect(()=>{\n\n    const debounce =  setTimeout( ()=>{\n        console.log('Checking form validity');\n        setFormIsValid(\n          emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    return clearTimeout(debounce);\n  }, [ emailState, passwordState]);\n  //This tells React to run only if any of the dependencies have changed.\n\n  const emailChangeHandler = (event) => {\n    dispatchEmailState({type:'USER_INPUT', val: event.target.value });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPasswordState({type:'USER_INPUT_PW', val: event.target.value});\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmailState({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPasswordState({type:'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}